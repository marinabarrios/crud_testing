# Generated by Django 5.2.5 on 2025-08-18 22:24

from django.db import migrations
from django.contrib.auth.hashers import make_password


def create_dummy_users(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    UserProfile = apps.get_model('users', 'UserProfile')
    
    # Create dummy users with profiles
    users_data = [
        {
            'user': {
                'username': 'john_doe',
                'email': 'john.doe@example.com',
                'first_name': 'John',
                'last_name': 'Doe',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0101',
                'address': '123 Main Street, Apt 4B',
                'city': 'New York',
                'postal_code': '10001',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'jane_smith',
                'email': 'jane.smith@example.com',
                'first_name': 'Jane',
                'last_name': 'Smith',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0102',
                'address': '456 Oak Avenue',
                'city': 'Los Angeles',
                'postal_code': '90210',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'mike_johnson',
                'email': 'mike.johnson@example.com',
                'first_name': 'Mike',
                'last_name': 'Johnson',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0103',
                'address': '789 Pine Road',
                'city': 'Chicago',
                'postal_code': '60601',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'sarah_wilson',
                'email': 'sarah.wilson@example.com',
                'first_name': 'Sarah',
                'last_name': 'Wilson',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0104',
                'address': '321 Cedar Lane',
                'city': 'Miami',
                'postal_code': '33101',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'david_brown',
                'email': 'david.brown@example.com',
                'first_name': 'David',
                'last_name': 'Brown',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0105',
                'address': '654 Elm Street',
                'city': 'Seattle',
                'postal_code': '98101',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'emma_davis',
                'email': 'emma.davis@example.com',
                'first_name': 'Emma',
                'last_name': 'Davis',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0106',
                'address': '987 Maple Drive',
                'city': 'Boston',
                'postal_code': '02101',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'alex_garcia',
                'email': 'alex.garcia@example.com',
                'first_name': 'Alex',
                'last_name': 'Garcia',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0107',
                'address': '147 Birch Boulevard',
                'city': 'Phoenix',
                'postal_code': '85001',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'lisa_martinez',
                'email': 'lisa.martinez@example.com',
                'first_name': 'Lisa',
                'last_name': 'Martinez',
                'password': make_password('password123'),
                'is_active': True,
            },
            'profile': {
                'phone': '+1-555-0108',
                'address': '258 Willow Way',
                'city': 'Denver',
                'postal_code': '80201',
                'country': 'USA',
            }
        },
        {
            'user': {
                'username': 'admin',
                'email': 'admin@example.com',
                'first_name': 'Admin',
                'last_name': 'User',
                'password': make_password('admin123'),
                'is_active': True,
                'is_staff': True,
                'is_superuser': True,
            },
            'profile': {
                'phone': '+1-555-0000',
                'address': 'Admin Office',
                'city': 'San Francisco',
                'postal_code': '94101',
                'country': 'USA',
            }
        },
    ]
    
    for user_data in users_data:
        # Create user
        user_info = user_data['user']
        user = User.objects.create(**user_info)
        
        # Create profile manually (signals might not work in migrations)
        profile_info = user_data['profile']
        profile_info['user'] = user
        UserProfile.objects.create(**profile_info)


def reverse_dummy_users(apps, schema_editor):
    User = apps.get_model('auth', 'User')
    UserProfile = apps.get_model('users', 'UserProfile')
    
    # Delete dummy users (profiles will be deleted automatically due to CASCADE)
    usernames = [
        'john_doe', 'jane_smith', 'mike_johnson', 'sarah_wilson',
        'david_brown', 'emma_davis', 'alex_garcia', 'lisa_martinez', 'admin'
    ]
    User.objects.filter(username__in=usernames).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_dummy_users, reverse_dummy_users),
    ]
