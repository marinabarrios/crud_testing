# Generated by Django 5.2.5 on 2025-08-18 22:21

from django.db import migrations
from decimal import Decimal


def create_dummy_categories_and_products(apps, schema_editor):
    Category = apps.get_model('products', 'Category')
    Product = apps.get_model('products', 'Product')
    
    # Create categories
    categories_data = [
        {'name': 'Electrónicos', 'description': 'Dispositivos electrónicos y gadgets'},
        {'name': 'Ropa', 'description': 'Moda y vestimenta'},
        {'name': 'Libros', 'description': 'Libros y literatura'},
        {'name': 'Hogar y Jardín', 'description': 'Mejoras para el hogar y suministros de jardín'},
        {'name': 'Deportes', 'description': 'Equipamiento y artículos deportivos'},
        {'name': 'Juguetes', 'description': 'Juguetes y juegos para todas las edades'},
    ]
    
    created_categories = {}
    for cat_data in categories_data:
        category = Category.objects.create(**cat_data)
        created_categories[cat_data['name']] = category
    
    # Create products
    products_data = [
        # Electrónicos
        {'name': 'Teléfono Inteligente X1', 'description': 'Último modelo de smartphone con características avanzadas', 'price': Decimal('699.99'), 'stock': 50, 'category': 'Electrónicos'},
        {'name': 'Laptop Pro', 'description': 'Portátil de alto rendimiento para profesionales', 'price': Decimal('1299.99'), 'stock': 25, 'category': 'Electrónicos'},
        {'name': 'Audífonos Inalámbricos', 'description': 'Audífonos premium con cancelación de ruido', 'price': Decimal('199.99'), 'stock': 100, 'category': 'Electrónicos'},
        {'name': 'Reloj Inteligente', 'description': 'Smartwatch con seguimiento de actividad física', 'price': Decimal('299.99'), 'stock': 75, 'category': 'Electrónicos'},
        {'name': 'Monitor 4K', 'description': 'Monitor de 27 pulgadas con resolución 4K', 'price': Decimal('399.99'), 'stock': 30, 'category': 'Electrónicos'},
        
        # Ropa
        {'name': 'Camiseta de Algodón', 'description': 'Camiseta cómoda 100% algodón', 'price': Decimal('19.99'), 'stock': 200, 'category': 'Ropa'},
        {'name': 'Jeans de Mezclilla', 'description': 'Jeans clásicos de mezclilla azul', 'price': Decimal('49.99'), 'stock': 150, 'category': 'Ropa'},
        {'name': 'Chaqueta de Invierno', 'description': 'Chaqueta abrigadora con capucha para invierno', 'price': Decimal('89.99'), 'stock': 80, 'category': 'Ropa'},
        {'name': 'Zapatos para Correr', 'description': 'Zapatos deportivos ligeros para running', 'price': Decimal('79.99'), 'stock': 120, 'category': 'Ropa'},
        {'name': 'Vestido de Verano', 'description': 'Elegante vestido para la temporada de verano', 'price': Decimal('59.99'), 'stock': 90, 'category': 'Ropa'},
        
        # Libros
        {'name': 'Guía de Programación Python', 'description': 'Guía completa para programación en Python', 'price': Decimal('39.99'), 'stock': 60, 'category': 'Libros'},
        {'name': 'Novela de Ciencia Ficción', 'description': 'Aventura de ciencia ficción más vendida', 'price': Decimal('14.99'), 'stock': 80, 'category': 'Libros'},
        {'name': 'Masterclass de Cocina', 'description': 'Técnicas profesionales de cocina', 'price': Decimal('29.99'), 'stock': 45, 'category': 'Libros'},
        {'name': 'Historia del Arte', 'description': 'Libro completo sobre la historia del arte', 'price': Decimal('49.99'), 'stock': 35, 'category': 'Libros'},
        
        # Hogar y Jardín
        {'name': 'Cafetera Automática', 'description': 'Cafetera automática de goteo', 'price': Decimal('89.99'), 'stock': 40, 'category': 'Hogar y Jardín'},
        {'name': 'Set de Herramientas de Jardín', 'description': 'Juego completo de herramientas para jardín', 'price': Decimal('59.99'), 'stock': 25, 'category': 'Hogar y Jardín'},
        {'name': 'Lámpara LED de Mesa', 'description': 'Moderna lámpara LED para escritorio', 'price': Decimal('34.99'), 'stock': 65, 'category': 'Hogar y Jardín'},
        {'name': 'Cojín Decorativo', 'description': 'Cojín decorativo para el hogar', 'price': Decimal('24.99'), 'stock': 100, 'category': 'Hogar y Jardín'},
        
        # Deportes
        {'name': 'Tapete de Yoga', 'description': 'Tapete antideslizante para yoga', 'price': Decimal('29.99'), 'stock': 85, 'category': 'Deportes'},
        {'name': 'Raqueta de Tenis', 'description': 'Raqueta profesional de tenis', 'price': Decimal('149.99'), 'stock': 20, 'category': 'Deportes'},
        {'name': 'Balón de Básquetbol', 'description': 'Balón oficial de básquetbol', 'price': Decimal('24.99'), 'stock': 50, 'category': 'Deportes'},
        {'name': 'Set de Mancuernas', 'description': 'Juego de mancuernas ajustables', 'price': Decimal('199.99'), 'stock': 15, 'category': 'Deportes'},
        
        # Juguetes
        {'name': 'Juego de Mesa Clásico', 'description': 'Juego de mesa clásico para toda la familia', 'price': Decimal('34.99'), 'stock': 70, 'category': 'Juguetes'},
        {'name': 'Bloques de Construcción', 'description': 'Set creativo de bloques de construcción', 'price': Decimal('39.99'), 'stock': 90, 'category': 'Juguetes'},
        {'name': 'Auto a Control Remoto', 'description': 'Auto de carreras rápido con control remoto', 'price': Decimal('79.99'), 'stock': 30, 'category': 'Juguetes'},
        {'name': 'Rompecabezas 1000 Piezas', 'description': 'Desafiante rompecabezas de 1000 piezas', 'price': Decimal('19.99'), 'stock': 55, 'category': 'Juguetes'},
    ]
    
    for product_data in products_data:
        category_name = product_data.pop('category')
        product_data['category'] = created_categories[category_name]
        Product.objects.create(**product_data)


def reverse_dummy_data(apps, schema_editor):
    Category = apps.get_model('products', 'Category')
    Product = apps.get_model('products', 'Product')
    
    # Delete all products and categories
    Product.objects.all().delete()
    Category.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_dummy_categories_and_products, reverse_dummy_data),
    ]
